/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerCliente;
import controller.ControllerVendasCliente;
import java.awt.Font;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.event.InternalFrameEvent;
import javax.swing.plaf.FontUIResource;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.ModelCliente;
import model.ModelVendasCliente;

/**
 *
 * @author afbo2
 */
public class Clientes extends javax.swing.JInternalFrame {

    ControllerCliente controllerCliente = new ControllerCliente();
    ModelCliente modelCliente = new ModelCliente();
    ArrayList<ModelCliente> listaModelCliente = new ArrayList<>();
    String salvarAlterar;

    ControllerVendasCliente controllerVendasCliente = new ControllerVendasCliente();
    ModelVendasCliente modelVendasCliente = new ModelVendasCliente();
    ArrayList<ModelVendasCliente> listaModelVendasCliente = new ArrayList<>();

    /**
     * Creates new form Clientes
     */
    public Clientes() {
        initComponents();
        carregarClientes();
        salvarAlterar = "salvar";
        customTable();
        UIManager.put("OptionPane.messageFont", new FontUIResource(new Font(null, Font.BOLD, 20)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelClientes = new javax.swing.JTabbedPane();
        painelConsulta = new javax.swing.JPanel();
        jtfPesquisa = new javax.swing.JTextField();
        painelListaDePClientes = new javax.swing.JScrollPane();
        jtListaDeClientes = new javax.swing.JTable();
        jbAlterar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbRetornar = new javax.swing.JButton();
        painelCadastro = new javax.swing.JPanel();
        jbSalvar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfTelefone = new javax.swing.JFormattedTextField();
        jtfNomeCliente = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 204, 255));
        setClosable(true);
        setOpaque(false);

        painelClientes.setBackground(new java.awt.Color(255, 204, 255));
        painelClientes.setForeground(new java.awt.Color(255, 255, 255));
        painelClientes.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        painelClientes.setOpaque(true);
        painelClientes.setPreferredSize(new java.awt.Dimension(1350, 750));

        painelConsulta.setBackground(new java.awt.Color(255, 204, 255));
        painelConsulta.setForeground(new java.awt.Color(255, 255, 255));

        jtfPesquisa.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jtfPesquisa.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfPesquisa.setText("Nome do Cliente");
        jtfPesquisa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfPesquisaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfPesquisaFocusLost(evt);
            }
        });
        jtfPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfPesquisaKeyTyped(evt);
            }
        });

        painelListaDePClientes.setBackground(new java.awt.Color(0, 0, 0));
        painelListaDePClientes.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        painelListaDePClientes.setForeground(new java.awt.Color(255, 255, 255));

        jtListaDeClientes.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jtListaDeClientes.setForeground(new java.awt.Color(0, 0, 0));
        jtListaDeClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nome Cliente", "Telefone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtListaDeClientes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jtListaDeClientes.setGridColor(new java.awt.Color(0, 0, 0));
        jtListaDeClientes.setRowHeight(40);
        jtListaDeClientes.setRowMargin(10);
        jtListaDeClientes.setSelectionBackground(new java.awt.Color(255, 204, 255));
        jtListaDeClientes.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jtListaDeClientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        painelListaDePClientes.setViewportView(jtListaDeClientes);
        if (jtListaDeClientes.getColumnModel().getColumnCount() > 0) {
            jtListaDeClientes.getColumnModel().getColumn(0).setMinWidth(90);
            jtListaDeClientes.getColumnModel().getColumn(0).setPreferredWidth(90);
            jtListaDeClientes.getColumnModel().getColumn(0).setMaxWidth(90);
            jtListaDeClientes.getColumnModel().getColumn(2).setMinWidth(200);
            jtListaDeClientes.getColumnModel().getColumn(2).setPreferredWidth(200);
            jtListaDeClientes.getColumnModel().getColumn(2).setMaxWidth(200);
        }

        jbAlterar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vania's bg/pencil.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbExcluir.setBackground(new java.awt.Color(255, 51, 51));
        jbExcluir.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vania's bg/file.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbExcluirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbExcluirMouseExited(evt);
            }
        });
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbRetornar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbRetornar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vania's bg/undo.png"))); // NOI18N
        jbRetornar.setText("Retornar");
        jbRetornar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbRetornar.setEnabled(false);
        jbRetornar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRetornarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelConsultaLayout = new javax.swing.GroupLayout(painelConsulta);
        painelConsulta.setLayout(painelConsultaLayout);
        painelConsultaLayout.setHorizontalGroup(
            painelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jbRetornar, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(159, 159, 159)
                .addComponent(jbAlterar)
                .addGap(79, 79, 79)
                .addComponent(jbExcluir)
                .addContainerGap(168, Short.MAX_VALUE))
            .addGroup(painelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(painelConsultaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(painelListaDePClientes, javax.swing.GroupLayout.DEFAULT_SIZE, 1334, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        painelConsultaLayout.setVerticalGroup(
            painelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConsultaLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(painelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(painelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbRetornar))
                    .addGroup(painelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(585, Short.MAX_VALUE))
            .addGroup(painelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelConsultaLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelListaDePClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        painelClientes.addTab("Consulta", painelConsulta);

        painelCadastro.setBackground(new java.awt.Color(255, 204, 255));
        painelCadastro.setForeground(new java.awt.Color(255, 255, 255));

        jbSalvar.setBackground(new java.awt.Color(102, 255, 102));
        jbSalvar.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vania's bg/salve-.png"))); // NOI18N
        jbSalvar.setText(" Salvar");
        jbSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbCancelar.setBackground(new java.awt.Color(255, 51, 51));
        jbCancelar.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vania's bg/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vania's bg/escreve-carta.png"))); // NOI18N
        jLabel2.setText("Nome do Cliente");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vania's bg/smartphone.png"))); // NOI18N
        jLabel3.setText("Telefone");

        jtfTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jtfTelefone.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfTelefone.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        jtfNomeCliente.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jtfNomeCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout painelCadastroLayout = new javax.swing.GroupLayout(painelCadastro);
        painelCadastro.setLayout(painelCadastroLayout);
        painelCadastroLayout.setHorizontalGroup(
            painelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastroLayout.createSequentialGroup()
                .addGap(213, 213, 213)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 292, Short.MAX_VALUE)
                .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(195, 195, 195))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCadastroLayout.createSequentialGroup()
                .addContainerGap(563, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(557, 557, 557))
            .addGroup(painelCadastroLayout.createSequentialGroup()
                .addGroup(painelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCadastroLayout.createSequentialGroup()
                        .addGap(355, 355, 355)
                        .addComponent(jtfNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelCadastroLayout.createSequentialGroup()
                        .addGap(545, 545, 545)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelCadastroLayout.createSequentialGroup()
                        .addGap(416, 416, 416)
                        .addComponent(jtfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelCadastroLayout.setVerticalGroup(
            painelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastroLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel2)
                .addGap(34, 34, 34)
                .addComponent(jtfNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(30, 30, 30)
                .addComponent(jtfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 254, Short.MAX_VALUE)
                .addGroup(painelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCancelar)
                    .addComponent(jbSalvar))
                .addGap(42, 42, 42))
        );

        painelClientes.addTab("Cadastro", painelCadastro);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelClientes, javax.swing.GroupLayout.DEFAULT_SIZE, 1348, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelClientes, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfPesquisaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfPesquisaFocusGained
        jtfPesquisa.setText("");
        jbRetornar.setEnabled(true);
    }//GEN-LAST:event_jtfPesquisaFocusGained

    private void jtfPesquisaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfPesquisaFocusLost
        if (jtfPesquisa.getText().equals("")) {
            jtfPesquisa.setText("Nome do Cliente");
        }
    }//GEN-LAST:event_jtfPesquisaFocusLost

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        modelCliente = new ModelCliente();
        salvarAlterar = "alterar";
        int linha = jtListaDeClientes.getSelectedRow();
        try {
            int codigoCliente = (int) jtListaDeClientes.getValueAt(linha, 0);
            //recupera os dados do BD
            modelCliente = controllerCliente.getClienteController(codigoCliente);
            //setar na interface
            jtfNomeCliente.setText(modelCliente.getCliNome());
            jtfTelefone.setText(String.valueOf(modelCliente.getCliTelefone()));
            painelClientes.setSelectedIndex(1);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "CÃ³digo invÃ¡lido ou nenhum registro foi selecionado!", "Aviso", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbExcluirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbExcluirMouseEntered
        jbExcluir.setBackground(new java.awt.Color(255, 102, 102));
    }//GEN-LAST:event_jbExcluirMouseEntered

    private void jbExcluirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbExcluirMouseExited
        jbExcluir.setBackground(new java.awt.Color(255, 51, 51));
    }//GEN-LAST:event_jbExcluirMouseExited

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        //EXCLUI UM PRODUTO DO BANCO
        int respostaConfirmacao = JOptionPane.showConfirmDialog(
                rootPane,
                "VocÃª estÃ¡ prestes a excluir o cadastro de um Cliente\n\n"
                + "(NÃ£o Ã© possivel excluir clientes que possuem vendas efetuadas)\n\n"
                + "Deseja continuar?",
                "ConfirmaÃ§Ã£o",
                JOptionPane.YES_NO_OPTION);

        //se resposa for nÃ£o para continuar o registro da venda
        if (respostaConfirmacao == JOptionPane.NO_OPTION) {
            //sai do mÃ©todo 
            return;
        }
        int linha = jtListaDeClientes.getSelectedRow();
        try {
            int codigoProduto = (int) jtListaDeClientes.getValueAt(linha, 0);
            if (controllerCliente.excluirClienteController(codigoProduto)) {
                JOptionPane.showMessageDialog(this, "Cliente excluido com sucesso!!", "ATENÃÃO", JOptionPane.WARNING_MESSAGE);
                this.carregarClientes();
            } else {
                JOptionPane.showMessageDialog(this, "Possivelmente esse cliente estÃ¡ ligado a alguma venda \n\n"
                        + "Caso nÃ£o esteja, Ã© uma falha no sistema, entre em contato com o ADM",
                        "ERRO", JOptionPane.ERROR_MESSAGE       
         );
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "CÃ³digo invÃ¡lido ou nenhum registro foi selecionado!", "Aviso", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed

        if (jtfNomeCliente.getText().equals("") || jtfTelefone.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Por favor preencha todos os campos", "ATENÃÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            modelCliente.setCliNome(jtfNomeCliente.getText());
            modelCliente.setCliTelefone(jtfTelefone.getText());
            if (salvarAlterar == "alterar") {
                if (controllerCliente.atualizarClienteController(modelCliente)) {
                    JOptionPane.showMessageDialog(this, "Registro alterado com sucesso!!", "ATENÃÃO", JOptionPane.INFORMATION_MESSAGE);
                    this.carregarClientes();
                    this.limparCampos();
                    this.painelClientes.setSelectedIndex(0);
                    salvarAlterar = "salvar";
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao alterar o registro!!", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                if (controllerCliente.salvarClienteController(modelCliente) > 0) {
                    JOptionPane.showMessageDialog(this, "Cliente cadastrado com sucesso!!", "ATENÃÃO", JOptionPane.INFORMATION_MESSAGE);
                    this.carregarClientes();
                    this.limparCampos();
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao cadastrar o cliente!!", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            }

        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        int respostaConfirmacao = JOptionPane.showConfirmDialog(
                rootPane,
                "VocÃª EstÃ¡ prester a cancelar a operaÃ§Ã£o \n\n"
                + "Deseja continuar?",
                "ConfirmaÃ§Ã£o",
                JOptionPane.YES_NO_OPTION);

        //se resposa for nÃ£o para continuar o registro da venda
        if (respostaConfirmacao == JOptionPane.NO_OPTION) {
            //sai do mÃ©todo 
            return;
        }

        if (salvarAlterar == "salvar") {
            limparCampos();
        } else {
            salvarAlterar = "salvar";
            limparCampos();
            painelClientes.setSelectedIndex(0);
        }
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbRetornarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRetornarActionPerformed
        jtfPesquisa.setText("Nome do Cliente");
        pesquisarTudo();
        jbRetornar.setEnabled(false);
    }//GEN-LAST:event_jbRetornarActionPerformed

    private void jtfPesquisaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisaKeyTyped
        DefaultTableModel modelo = (DefaultTableModel) this.jtListaDeClientes.getModel();
        final TableRowSorter<TableModel> classificador = new TableRowSorter<>(modelo);

        jtfPesquisa.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent ke) {
                classificador.setRowFilter(RowFilter.regexFilter("(?i)" + jtfPesquisa.getText(), 1));
                jtListaDeClientes.setRowSorter(classificador);
            }
        });
    }//GEN-LAST:event_jtfPesquisaKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbRetornar;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JTable jtListaDeClientes;
    private javax.swing.JTextField jtfNomeCliente;
    private javax.swing.JTextField jtfPesquisa;
    private javax.swing.JFormattedTextField jtfTelefone;
    private javax.swing.JPanel painelCadastro;
    private javax.swing.JTabbedPane painelClientes;
    private javax.swing.JPanel painelConsulta;
    private javax.swing.JScrollPane painelListaDePClientes;
    // End of variables declaration//GEN-END:variables

    private void pesquisarTudo() {
        DefaultTableModel modelo = (DefaultTableModel) this.jtListaDeClientes.getModel();
        final TableRowSorter<TableModel> classificador = new TableRowSorter<>(modelo);
        this.jtListaDeClientes.setRowSorter(classificador);
        String textoPesquisa = "";
        classificador.setRowFilter(RowFilter.regexFilter("(?i)" + textoPesquisa, 1));
    }

    private void carregarClientes() {
        listaModelCliente = new ArrayList<ModelCliente>();
        listaModelCliente = controllerCliente.getListaClienteController();
        DefaultTableModel modelo = (DefaultTableModel) jtListaDeClientes.getModel();
        modelo.setNumRows(0);
        int cont = listaModelCliente.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelCliente.get(i).getIdCliente(),
                listaModelCliente.get(i).getCliNome(),
                listaModelCliente.get(i).getCliTelefone(),});
        }
    }

    private void limparCampos() {
        jtfNomeCliente.setText("");
        jtfTelefone.setText("");

    }

    //seta a interface como nula ao fechar
    //
    public void internalFrameClosed(InternalFrameEvent e) {
        ViewPrincipal principal = new ViewPrincipal();
        principal.clientes = null;
    }

    public void Refresh() {
        limparCampos();
        pesquisarTudo();
        carregarClientes();
        jtfPesquisa.setText("Nome do Cliente");
    }

    //customizaÃ§Ã£o das tabelas na interface
    private void customTable() {

        JTableHeader cabecalho = jtListaDeClientes.getTableHeader();
        cabecalho.setBackground(new java.awt.Color(255, 255, 255));
        cabecalho.setFont((new java.awt.Font("Dialog", 1, 18)));

        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);

    }
}
